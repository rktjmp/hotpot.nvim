name: Build Nightly with Fennel HEAD

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  schedule:
    - cron: '0 0 * * *'

jobs:
  # print_context:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - env:
  #         EVENT_CONTEXT: ${{ toJSON(github) }}
  #       run: |
  #         echo $EVENT_CONTEXT
  check_stale:
    runs-on: ubuntu-latest
    outputs:
      stale: ${{ steps.compare.outputs.stale }}
    steps:
    - uses: actions/checkout@v3
    - name: Get Fennel SHA from nightly branch
      run: |
        git fetch origin nightly
        git checkout nightly
        CURRENT_SHA=$(git log --oneline HEAD~1..HEAD | sed 's/.\+dev-\(.\+\)/\1/')
        echo "CURRENT_SHA=$CURRENT_SHA" >> $GITHUB_ENV
    - name: Get latest Fennel SHA from remote
      run: |
        git clone https://git.sr.ht/~technomancy/fennel fennel.git
        cd fennel.git
        FENNEL_SHA=$(git rev-parse --short HEAD)
        echo "FENNEL_SHA=$FENNEL_SHA" >> $GITHUB_ENV
    - name: Compare remote vs last SHA
      id: compare
      run: |
        if [ $CURRENT_SHA != $FENNEL_SHA ]; then
          echo "stale=true" >> $GITHUB_ENV
        else
          echo "stale=false" >> $GITHUB_ENV
        fi
  build_nightly:
    runs-on: ubuntu-latest
    needs: check_stale
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || needs.check_stale.outputs.stale == 'true' }}
    steps:
    - uses: actions/checkout@v3
      with:
        # we want full histories so we can actually merge
        fetch-depth: 0
    - name: Checkout nightly
      run: |
        git config --global user.name 'Hotpot Automatron'
        git config --global user.email 'rktjmp@users.noreply.github.com'
        git checkout nightly
        git status
        # force merge master over us
        git merge -Xtheirs master
        git status
    - name: Install lua 5.3
      run: sudo apt update -y && sudo apt install -y lua5.3
    - name: Build Fennel HEAD
      run: |
        git status
        git clone https://git.sr.ht/~technomancy/fennel fennel.git
        cd fennel.git
        make
        # we will name the file by short sha
        FENNEL_SHA=$(git rev-parse --short HEAD)
        # need version for plugin version list
        FENNEL_VERSION=$(./fennel --version | sed 's/Fennel \([0-9.]\+\).\+/\1/')
        # target filename
        FENNEL_LUA=fennel-$FENNEL_SHA.lua
        echo "FENNEL_SHA=$FENNEL_SHA" >> $GITHUB_ENV
        echo "FENNEL_VERSION=$FENNEL_VERSION" >> $GITHUB_ENV
        echo "FENNEL_LUA=$FENNEL_LUA" >> $GITHUB_ENV
    - name: Apply Fennel patches
      run: |
        PATH=./fennel.git:$PATH # add fennel to path for build script
        # install fennel into deps folder
        cp fennel.git/fennel.lua deps/$FENNEL_LUA
        # update link
        cd deps
        rm fennel.lua
        ln -s $FENNEL_LUA fennel.lua
        cd -
        # add plugin hook
        sed -i 's/if ("import-macros" == tostring(ast\[1\])) then/utils.hook("require-macros", ast, scope)\n\0/' deps/$FENNEL_LUA
        # mark our plugin to support new version
        sed -i "s/:versions \[.\+\]/:versions [:$FENNEL_VERSION]/"  fnl/hotpot/searcher/module.fnl
        # build package
        ./build selfhost
        ./build canary
    - name: Run tests
      run: |
        cd test
        ./harness.sh docker
        # if a test fails we should not commit the build
        exit $?
    - name: Commit updated build
      run: |
        # add changes
        git add -A fnl/ lua/ deps/ canary
        git status
        git commit -m "Automated build with Fennel-$FENNEL_VERSION-dev-$FENNEL_SHA"
        git push
